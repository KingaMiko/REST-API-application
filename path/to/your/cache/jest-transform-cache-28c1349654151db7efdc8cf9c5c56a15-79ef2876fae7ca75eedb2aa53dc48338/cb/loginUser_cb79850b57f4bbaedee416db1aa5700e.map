{"version":3,"names":["cov_2l4elmtvi8","actualCoverage","findUserByEmail","updateToken","jwt","bcrypt","userSchema","ErrorHandler","s","loginUser","req","res","next","f","error","validate","body","b","email","password","user","isMatch","compare","token","sign","userId","_id","process","env","SECRET_KEY","expiresIn","status","json","subscription","avatarURL"],"sources":["loginUser.js"],"sourcesContent":["import {\n  findUserByEmail,\n  updateToken,\n} from \"#repository/users/usersRepository.js\";\nimport jwt from \"jsonwebtoken\";\nimport bcrypt from \"bcrypt\";\nimport userSchema from \"#validators/userSchema.js\";\nimport { ErrorHandler } from \"#middlewares/errorHandler.js\";\n\nexport const loginUser = async (req, res, next) => {\n  try {\n    const { error } = userSchema.validate(req.body);\n    if (error) {\n      throw new ErrorHandler(400, \"Validation error\");\n    }\n\n    const { email, password } = req.body;\n    const user = await findUserByEmail(email);\n    if (!user) {\n      throw new ErrorHandler(401, \"Email or password is wrong\");\n    }\n    const isMatch = await bcrypt.compare(password, user.password);\n\n    if (!isMatch) {\n      throw new ErrorHandler(401, \"Email or password is wrong\");\n    }\n\n    const token = jwt.sign({ userId: user._id }, process.env.SECRET_KEY, {\n      expiresIn: \"12h\",\n    });\n\n    await updateToken(user._id, token);\n\n    res.status(200).json({\n      token,\n      user: {\n        email: user.email,\n        subscription: user.subscription,\n        avatarURL: user.avatarURL,\n      },\n    });\n  } catch (error) {\n    next(error);\n  }\n};\n"],"mappings":"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"}