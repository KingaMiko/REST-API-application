1afb709fdeb4ce56acfd802b41217c03
/* istanbul ignore next */
function cov_268zub4kp4() {
  var path = "/Users/kinga/Documents/GOIT/github/Node/nodejs-project/repository/users/usersRepository.js";
  var hash = "1d908d798bc7b4d4a995a14c16e4c2d008773856";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kinga/Documents/GOIT/github/Node/nodejs-project/repository/users/usersRepository.js",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 26
        },
        end: {
          line: 14,
          column: 1
        }
      },
      "1": {
        start: {
          line: 6,
          column: 25
        },
        end: {
          line: 6,
          column: 56
        }
      },
      "2": {
        start: {
          line: 7,
          column: 20
        },
        end: {
          line: 7,
          column: 71
        }
      },
      "3": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 12,
          column: 4
        }
      },
      "4": {
        start: {
          line: 13,
          column: 2
        },
        end: {
          line: 13,
          column: 14
        }
      },
      "5": {
        start: {
          line: 15,
          column: 31
        },
        end: {
          line: 17,
          column: 1
        }
      },
      "6": {
        start: {
          line: 16,
          column: 2
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "7": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 21,
          column: 1
        }
      },
      "8": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "9": {
        start: {
          line: 23,
          column: 30
        },
        end: {
          line: 25,
          column: 1
        }
      },
      "10": {
        start: {
          line: 24,
          column: 2
        },
        end: {
          line: 24,
          column: 72
        }
      },
      "11": {
        start: {
          line: 27,
          column: 32
        },
        end: {
          line: 29,
          column: 1
        }
      },
      "12": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 28,
          column: 70
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 26
          },
          end: {
            line: 5,
            column: 27
          }
        },
        loc: {
          start: {
            line: 5,
            column: 57
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 15,
            column: 32
          }
        },
        loc: {
          start: {
            line: 15,
            column: 42
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 19,
            column: 28
          }
        },
        loc: {
          start: {
            line: 19,
            column: 46
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 30
          },
          end: {
            line: 23,
            column: 31
          }
        },
        loc: {
          start: {
            line: 23,
            column: 48
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 32
          },
          end: {
            line: 27,
            column: 33
          }
        },
        loc: {
          start: {
            line: 27,
            column: 55
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 27
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {},
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1d908d798bc7b4d4a995a14c16e4c2d008773856"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_268zub4kp4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_268zub4kp4();
import User from "#models/user.js";
import bcrypt from "bcrypt";
import gravatar from "gravatar";
/* istanbul ignore next */
cov_268zub4kp4().s[0]++;
export const createUser = async ({
  email,
  password
}) => {
  /* istanbul ignore next */
  cov_268zub4kp4().f[0]++;
  const hashedPassword =
  /* istanbul ignore next */
  (cov_268zub4kp4().s[1]++, await bcrypt.hash(password, 12));
  const avatarURL =
  /* istanbul ignore next */
  (cov_268zub4kp4().s[2]++, gravatar.url(email, {
    s: "250",
    r: "pg",
    d: "mm"
  }));
  const user =
  /* istanbul ignore next */
  (cov_268zub4kp4().s[3]++, await User.create({
    email,
    password: hashedPassword,
    avatarURL
  }));
  /* istanbul ignore next */
  cov_268zub4kp4().s[4]++;
  return user;
};
/* istanbul ignore next */
cov_268zub4kp4().s[5]++;
export const findUserByEmail = email => {
  /* istanbul ignore next */
  cov_268zub4kp4().f[1]++;
  cov_268zub4kp4().s[6]++;
  return User.findOne({
    email
  });
};
/* istanbul ignore next */
cov_268zub4kp4().s[7]++;
export const updateToken = (userId, token) => {
  /* istanbul ignore next */
  cov_268zub4kp4().f[2]++;
  cov_268zub4kp4().s[8]++;
  return User.findByIdAndUpdate(userId, {
    token
  });
};
/* istanbul ignore next */
cov_268zub4kp4().s[9]++;
export const unsetUserToken = async userId => {
  /* istanbul ignore next */
  cov_268zub4kp4().f[3]++;
  cov_268zub4kp4().s[10]++;
  return User.findByIdAndUpdate(userId, {
    token: null
  }, {
    new: true
  });
};
/* istanbul ignore next */
cov_268zub4kp4().s[11]++;
export const updateUserAvatar = (userId, avatarURL) => {
  /* istanbul ignore next */
  cov_268zub4kp4().f[4]++;
  cov_268zub4kp4().s[12]++;
  return User.findByIdAndUpdate(userId, {
    avatarURL
  }, {
    new: true
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjY4enViNGtwNCIsImFjdHVhbENvdmVyYWdlIiwiVXNlciIsImJjcnlwdCIsImdyYXZhdGFyIiwicyIsImNyZWF0ZVVzZXIiLCJlbWFpbCIsInBhc3N3b3JkIiwiZiIsImhhc2hlZFBhc3N3b3JkIiwiaGFzaCIsImF2YXRhclVSTCIsInVybCIsInIiLCJkIiwidXNlciIsImNyZWF0ZSIsImZpbmRVc2VyQnlFbWFpbCIsImZpbmRPbmUiLCJ1cGRhdGVUb2tlbiIsInVzZXJJZCIsInRva2VuIiwiZmluZEJ5SWRBbmRVcGRhdGUiLCJ1bnNldFVzZXJUb2tlbiIsIm5ldyIsInVwZGF0ZVVzZXJBdmF0YXIiXSwic291cmNlcyI6WyJ1c2Vyc1JlcG9zaXRvcnkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFVzZXIgZnJvbSBcIiNtb2RlbHMvdXNlci5qc1wiO1xuaW1wb3J0IGJjcnlwdCBmcm9tIFwiYmNyeXB0XCI7XG5pbXBvcnQgZ3JhdmF0YXIgZnJvbSBcImdyYXZhdGFyXCI7XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVVc2VyID0gYXN5bmMgKHsgZW1haWwsIHBhc3N3b3JkIH0pID0+IHtcbiAgY29uc3QgaGFzaGVkUGFzc3dvcmQgPSBhd2FpdCBiY3J5cHQuaGFzaChwYXNzd29yZCwgMTIpO1xuICBjb25zdCBhdmF0YXJVUkwgPSBncmF2YXRhci51cmwoZW1haWwsIHsgczogXCIyNTBcIiwgcjogXCJwZ1wiLCBkOiBcIm1tXCIgfSk7XG4gIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2VyLmNyZWF0ZSh7XG4gICAgZW1haWwsXG4gICAgcGFzc3dvcmQ6IGhhc2hlZFBhc3N3b3JkLFxuICAgIGF2YXRhclVSTCxcbiAgfSk7XG4gIHJldHVybiB1c2VyO1xufTtcbmV4cG9ydCBjb25zdCBmaW5kVXNlckJ5RW1haWwgPSAoZW1haWwpID0+IHtcbiAgcmV0dXJuIFVzZXIuZmluZE9uZSh7IGVtYWlsIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZVRva2VuID0gKHVzZXJJZCwgdG9rZW4pID0+IHtcbiAgcmV0dXJuIFVzZXIuZmluZEJ5SWRBbmRVcGRhdGUodXNlcklkLCB7IHRva2VuIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IHVuc2V0VXNlclRva2VuID0gYXN5bmMgKHVzZXJJZCkgPT4ge1xuICByZXR1cm4gVXNlci5maW5kQnlJZEFuZFVwZGF0ZSh1c2VySWQsIHsgdG9rZW46IG51bGwgfSwgeyBuZXc6IHRydWUgfSk7XG59O1xuXG5leHBvcnQgY29uc3QgdXBkYXRlVXNlckF2YXRhciA9ICh1c2VySWQsIGF2YXRhclVSTCkgPT4ge1xuICByZXR1cm4gVXNlci5maW5kQnlJZEFuZFVwZGF0ZSh1c2VySWQsIHsgYXZhdGFyVVJMIH0sIHsgbmV3OiB0cnVlIH0pO1xufTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFlWTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBZlosT0FBT0UsSUFBSSxNQUFNLGlCQUFpQjtBQUNsQyxPQUFPQyxNQUFNLE1BQU0sUUFBUTtBQUMzQixPQUFPQyxRQUFRLE1BQU0sVUFBVTtBQUFDO0FBQUFKLGNBQUEsR0FBQUssQ0FBQTtBQUVoQyxPQUFPLE1BQU1DLFVBQVUsR0FBRyxNQUFBQSxDQUFPO0VBQUVDLEtBQUs7RUFBRUM7QUFBUyxDQUFDLEtBQUs7RUFBQTtFQUFBUixjQUFBLEdBQUFTLENBQUE7RUFDdkQsTUFBTUMsY0FBYztFQUFBO0VBQUEsQ0FBQVYsY0FBQSxHQUFBSyxDQUFBLE9BQUcsTUFBTUYsTUFBTSxDQUFDUSxJQUFJLENBQUNILFFBQVEsRUFBRSxFQUFFLENBQUM7RUFDdEQsTUFBTUksU0FBUztFQUFBO0VBQUEsQ0FBQVosY0FBQSxHQUFBSyxDQUFBLE9BQUdELFFBQVEsQ0FBQ1MsR0FBRyxDQUFDTixLQUFLLEVBQUU7SUFBRUYsQ0FBQyxFQUFFLEtBQUs7SUFBRVMsQ0FBQyxFQUFFLElBQUk7SUFBRUMsQ0FBQyxFQUFFO0VBQUssQ0FBQyxDQUFDO0VBQ3JFLE1BQU1DLElBQUk7RUFBQTtFQUFBLENBQUFoQixjQUFBLEdBQUFLLENBQUEsT0FBRyxNQUFNSCxJQUFJLENBQUNlLE1BQU0sQ0FBQztJQUM3QlYsS0FBSztJQUNMQyxRQUFRLEVBQUVFLGNBQWM7SUFDeEJFO0VBQ0YsQ0FBQyxDQUFDO0VBQUM7RUFBQVosY0FBQSxHQUFBSyxDQUFBO0VBQ0gsT0FBT1csSUFBSTtBQUNiLENBQUM7QUFBQztBQUFBaEIsY0FBQSxHQUFBSyxDQUFBO0FBQ0YsT0FBTyxNQUFNYSxlQUFlLEdBQUlYLEtBQUssSUFBSztFQUFBO0VBQUFQLGNBQUEsR0FBQVMsQ0FBQTtFQUFBVCxjQUFBLEdBQUFLLENBQUE7RUFDeEMsT0FBT0gsSUFBSSxDQUFDaUIsT0FBTyxDQUFDO0lBQUVaO0VBQU0sQ0FBQyxDQUFDO0FBQ2hDLENBQUM7QUFBQztBQUFBUCxjQUFBLEdBQUFLLENBQUE7QUFFRixPQUFPLE1BQU1lLFdBQVcsR0FBR0EsQ0FBQ0MsTUFBTSxFQUFFQyxLQUFLLEtBQUs7RUFBQTtFQUFBdEIsY0FBQSxHQUFBUyxDQUFBO0VBQUFULGNBQUEsR0FBQUssQ0FBQTtFQUM1QyxPQUFPSCxJQUFJLENBQUNxQixpQkFBaUIsQ0FBQ0YsTUFBTSxFQUFFO0lBQUVDO0VBQU0sQ0FBQyxDQUFDO0FBQ2xELENBQUM7QUFBQztBQUFBdEIsY0FBQSxHQUFBSyxDQUFBO0FBRUYsT0FBTyxNQUFNbUIsY0FBYyxHQUFHLE1BQU9ILE1BQU0sSUFBSztFQUFBO0VBQUFyQixjQUFBLEdBQUFTLENBQUE7RUFBQVQsY0FBQSxHQUFBSyxDQUFBO0VBQzlDLE9BQU9ILElBQUksQ0FBQ3FCLGlCQUFpQixDQUFDRixNQUFNLEVBQUU7SUFBRUMsS0FBSyxFQUFFO0VBQUssQ0FBQyxFQUFFO0lBQUVHLEdBQUcsRUFBRTtFQUFLLENBQUMsQ0FBQztBQUN2RSxDQUFDO0FBQUM7QUFBQXpCLGNBQUEsR0FBQUssQ0FBQTtBQUVGLE9BQU8sTUFBTXFCLGdCQUFnQixHQUFHQSxDQUFDTCxNQUFNLEVBQUVULFNBQVMsS0FBSztFQUFBO0VBQUFaLGNBQUEsR0FBQVMsQ0FBQTtFQUFBVCxjQUFBLEdBQUFLLENBQUE7RUFDckQsT0FBT0gsSUFBSSxDQUFDcUIsaUJBQWlCLENBQUNGLE1BQU0sRUFBRTtJQUFFVDtFQUFVLENBQUMsRUFBRTtJQUFFYSxHQUFHLEVBQUU7RUFBSyxDQUFDLENBQUM7QUFDckUsQ0FBQyJ9